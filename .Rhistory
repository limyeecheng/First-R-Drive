a=1+2
b=2+3
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
c=plot(wt,mpg)
c
c=plot(wt, mpg)
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
d = 4
e
e = a * b
getwd()
attach(mtcars)
save.image("D:/Analytics/First R Drive/First R Drive.RData")
what = what
what = "whattttttttttttttttttttttttttttttttt"
q()
thisisfrommylaptop2May = 666
thisisfrommypc = 667
thisisfrommylaptop2May2 = 668
thisisfrommypc2May2 = 669
GETWD()
getwd()
installed.packages("car")
installed.packages("cars")
getwd()
install.packages("cars")
install.packages("CARS")
install.packages("ggvis")
install.packages("rgl")
install.packages("htmlwidgets")
install.packages("leaflet")
install.packages("dygraphs")
install.packages("DT")
install.packages("diagrammeR")
install.packages("DiagrammeR")
install.packages("network3D")
install.packages("network3d")
install.packages("threejs")
install.packages("networkD3")
library("networkD3")
# Load package
library(networkD3)
# Create fake data
src <- c("A", "A", "A", "A",
"B", "B", "C", "C", "D")
target <- c("B", "C", "D", "J",
"E", "F", "G", "H", "I")
networkData <- data.frame(src, target)
# Plot
simpleNetwork(networkData)
install.packages("mgcv")
install.packages("car")
install.packages("randomForest")
install.packages("vcd")
install.packages("multcomp")
install.packages("glmnet")
install.packages("survival")
install.packages("caret")
install.packages("lme4")
install.packages(c("DBI", "httpuv", "installr", "later", "MASS", "stringi", "survival", "yaml"))
library("ggplot2")
options(repr.plot.width = 4, repr.plot.height = 4)
help(options)
help(repr.plot)
??repr.plot
??representation.plot
??representation
help(repr.plot.width)
??repr.plot.width
t = seq(0, 2*pi, length.out = 50)
2*pi
t
2*pi/50
5.6420439 + 0.1256637
2*pi/49
5.6420439 + 0.1282283
x = sin(t)
y = cos(t)
x
y
cos(0)
cos(1)
cos(6.2831853)
360/49
oneunit = 360/49
oneunit*49
oneunit*48
sin(oneunit*48)
cos(oneunit*48)
cos(45)
sin(45)
rm(oneunit)
df = data.frame(t, x, y)
View(df)
sin(1.2822827)
cos(1.2822827)
# Make a scatter plot of points in a circle
p <- ggplot(df, aes(x, y))
View(p)
p + geom_point()
y = t + 1
x = cos(t)
y = sin(t)
df = data.frame(t, x, y)
View(df)
p <- ggplot(df, aes(x, y))
p + geom_point()
x = sin(t)
y = cos(t)
df = data.frame(t, x, y)
View(df)
p <- ggplot(df, aes(x, y))
p + geom_point()
points = 500
goldenangle = pi*(3-sqrt(5))
t1 = (1:points) * angle
t1 = (1:points) * goldenangle
t2 = (1:50)
x2 = sin(t2)
y2 = cos(t2)
df2 = data.frame(t2, x2, y2)
p2 <- ggplot(df2, aes(x2, y2))
p2 + geom_point()
sin(50000)
sin(500000000)
sin(50001)
sin(50000)
sin(500001)
sin(50003)
x1 = sin(t1)
y1 = cos(t1)
df1 = data.frame(t1, x1, y1)
p1 <- ggplot(df1, aes(x1*t, y1*t))
View(p1)
p1 + geom()
p1 + geom_point()
p1 <- ggplot(df1, aes(x1, y1))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*t, y1*t))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*t1, y1*t1))
p1 + geom_point()
View(df1)
p1 <- ggplot(df1, aes(x1, y1))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*50, y1*50))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*t1, y1*t1))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*500, y1*500))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*t1, y1*t1))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1, y1))
p1 + geom_point()
p1 <- ggplot(df1, aes(x1*t1, y1*t1))
p1 + geom_point()
